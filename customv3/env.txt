1. env -> Display environment variables
2. env -i /bin/bash -> Start a clean environment
3. env -u USER /bin/sh -> Start a shell with USER variable unset
4. env EDITOR=nano crontab -e -> Edit your crontab file with nano as editor
5. env -S PATH=/usr/local/bin ls -> Run the ls command with a changed PATH
6. env -i bash -> Start a clean login shell
7. env -i PATH=/bin ls -> Run the ls command with a specific PATH
8. env -0 ./my-script.sh -> Pass null-terminated arguments to the script
9. env -i TERM=xterm some_command -> Run a command with a specific terminal type
10. env -u HOME pwd -> Run a command with HOME variable unset
11. env -i SHELL=/bin/bash bash -> Start a bash shell with a specific shell executable
12. env - PATH=/usr/local/bin some_command -> Set the PATH for a command without clearing the environment
13. env -i VAR=value command -> Set a variable only for the command
14. env -i MYVAR=123 bash -> Start a bash shell with a specific variable set
15. env -i PATH=/usr/local/bin:/usr/bin sh -> Start a shell with a custom PATH
16. env -i PASSWORD=secret ssh user@host -> Login with a custom password
17. env -i TERM=dumb some_program -> Run a program with a dumb terminal
18. env -u PATH some_command -> Run a command with PATH variable unset
19. env -u VAR command -> Remove a specific variable before running a command
20. env -S MYVAR=some_value command -> Pass a specific environment variable to a command 
21. env MYVAR=abc some_command -> Set an environment variable for a command
22. env -u VAR perl script.pl -> Run a Perl script with a variable unset
23. env -S VAR=value command -> Pass an environment variable to a command
24. env -i HOME=/tmp bash -> Start a bash shell with a custom HOME directory
25. env -u MYVAR some_command -> Remove a variable from the environment before running the command
26. env -i TERM=xterm-256color bash -> Start a bash shell with a specific terminal type
27. env -i USER=root bash -> Start a bash shell as the root user
28. env -i EDITOR=vim crontab -e -> Edit the crontab with vim editor
29. env -i MYVAR=val some_command -> Set a variable only for the command
30. env -i HOME=/root bash -> Start a bash shell with root's home directory
31. env -i EDITOR=nano command -> Set the editor for a command
32. env -u SSH_AUTH_SOCK ssh user@host -> SSH without using SSH agent
33. env -i MYVAR=myval bash -> Start a bash shell with a predefined variable
34. env -i DISPLAY=:0 xterm -> Start xterm on display 0
35. env -u USER whoami -> Run whoami with the USER variable unset
36. env -i VAR=value bash -> Start a bash shell with a specific environment variable set
37. env -u PATH ls /tmp -> Run ls with PATH variable unset
38. env -i TERM=xterm-88color sh -> Start a shell with a specific terminal type
39. env -S MYVAR=123 some_command -> Pass a specific variable to a command
40. env -i EDITOR=vim some_command -> Set the editor for a command without affecting the environment
41. env MYVAR=123 some_command -> Set the environment variable for a command
42. env -i BASH_ENV=/path/to/bashrc bash -> Start a bash shell with a specific bashrc file
43. env -i LC_ALL=C ls -> Run a command with a specific language setting
44. env -u HOME ping google.com -> Ping Google with HOME variable unset
45. env -i HOME=/var/run/foo bash -> Start a bash shell with a custom home directory
46. env -i MYVAR=something perl script.pl -> Run a Perl script with a custom environment variable
47. env -u SOMEVAR ./some_script.sh -> Invokes some_script.sh with SOMEVAR variable unset
48. env -i DISPLAY=:0 xeyes -> Start xeyes on display 0
49. env -u myvar some_command -> Remove a specific variable from the environment
50. env -i LS_COLORS=none ls -> Disable colors in ls command
51. env MYVAR=foo bar.sh -> Set the env var MYVAR for the command bar.sh
52. env -i MYVAR=foo python script.py -> Set MYVAR only for the python script
53. env -i EDITOR=vi crontab -e -> Edit crontab with vi editor
54. env -u MYVAR cat file -> Run cat command with MYVAR variable unset
55. env -i VAR1=value1 VAR2=value2 bash -> Start a bash shell with multiple variables set
56. env -u SSH_AUTH_SOCK scp file user@host:/path -> Copy file to remote host without using SSH agent
57. env -i HOME=/home/root bash -> Start a bash shell with home directory set to /home/root
58. env -i TERM=vt220 bash -> Start a bash shell with vt220 terminal type
59. env -u ONE_VAR -u SECOND_VAR myscript -> Run myscript with ONE_VAR and SECOND_VAR variables unset
60. env -i PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/usr/games:/usr/local/games bash -> Start a bash shell with a specific PATH
61. env -u OLDPWD pwd -> Get the current directory minus the last component
62. env -i HOME=~/tmp bash -> Start a bash shell with a custom home directory
63. env -i TERM=xterm-16color bash -> Start a bash shell with xterm-16color terminal type
64. env -S VAR=value script.sh -> Pass VAR variable to script.sh
65. env -i MYVAR1=someval1 MYVAR2=someval2 script.sh -> Set MYVAR1 and MYVAR2 variables for script.sh only
66. env -u SSH_AGENT_PID scp file user@host:/path -> Copy file to remote host without using SSH agent
67. env -i TERM=xterm-88color ls -> Run ls with xterm-88color terminal type
68. env -i DISPLAY=localhost:0.0 rhythmbox -> Launch rhythmbox on the local X server
69. env -u PATH -u LD_LIBRARY_PATH command -> Remove PATH and LD_LIBRARY_PATH variables before running command
70. env -i LC_CTYPE=C ls -> Run ls with specific character encoding
71. env -u MYVAR1 -u MYVAR2 ./script.sh -> Run script.sh with MYVAR1 and MYVAR2 variables unset
72. env -i HOME=/root pwd -> Run pwd with /root as HOME directory
73. env -S MYVAR="\"hello world\"" script.sh -> Pass a string variable to script.sh
74. env -i TERM=ansi screen -> Start the GNU Screen terminal multiplexer with an ANSI terminal
75. env -u VAR1 -u VAR2 script.sh -> Remove VAR1 and VAR2 environment variables before running script.sh
76. env -i LC_ALL=en_US.UTF-8 sh -> Start a shell with specific language settings
77. env -u SSH_CLIENT scp file user@host:/path -> Copy file to remote host without using SSH agent
78. env -S MYVAR=$HOME script.sh -> Pass a variable with the home directory path to script.sh
79. env -i TERM=linux xterm -> Run xterm with a linux terminal type
80. env -u LD_PRELOAD command -> Run command with LD_PRELOAD variable unset
81. env -i MYVAR=echo foo bash -> Set MYVAR to the value of 'foo' for a bash shell only
82. env -u LC_ALL locale -> Get locale without LC_ALL variable
83. env -i HOME=/home/user/Desktop bash -> Start a bash shell with a custom home directory
84. env -S VAR="\"I am a value\" command -> Pass a complex value to a command
85. env -S VAR=1234 ./script.sh -> Set VAR variable for script.sh only
86. env -i TERM=dumb screen -> Start the GNU Screen terminal multiplexer with a dumb terminal
87. env -u TERMCAP clear -> Clears screen while TERMCAP variable is unset
88. env -i SHELL=/bin/ksh ksh -> Start a ksh shell with the /bin/ksh executable
89. env -S VAR="cat /etc/passwd" command -> Pass the contents of /etc/passwd to a command
90. env -u XAUTHORITY xterm -> Run xterm with XAUTHORITY variable unset
91. env -i MYVAR=$(echo "Hello, World!") bash -> Set a variable with a command substitution
92. env -u LANG date -> Run the date command without the LANG variable
93. env -i HOME=/mnt/sdb1 bash -> Start a bash shell with a custom home directory
94. env -u LC_COLLATE ls -> Run the ls command without the LC_COLLATE variable
95. env -i SHELL=/bin/tcsh tcsh -> Start a tcsh shell with the /bin/tcsh executable
96. env -S VAR=/path/to/dir command -> Pass a directory path to a command
97. env -u LOGNAME whoami -> Run whoami without the LOGNAME variable
98. env -i MYVAR="$(printf "%s" "hello world")" sh -> Set MYVAR to 'hello world' using printf command
99. env -u IFS read -p "Enter your name: " name -> Use the read command with IFS variable unset
100. env -i MYVAR=/path/to/dir bash -> Start a bash shell with the variable MYVAR set to a directory path